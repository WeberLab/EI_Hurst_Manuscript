{
  "hash": "70d2833b169fa68e6a9be92ecced3161",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EI_Hurst\"\nauthor: \"Lydia Sochan and Alex Weber\"\ndate: \"2025-02-15\"\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# First, let's load our packages.\nlibrary(FactoMineR)\nlibrary(Hmisc)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(broom.mixed)\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ncorrplot 0.92 loaded\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(corrr)\nlibrary(factoextra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(formattable)\nlibrary(ggcorrplot)\nlibrary(ggrepel)\nlibrary(glmnet)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Matrix\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoaded glmnet 4.1-8\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(lme4)\nlibrary(lmerTest)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'lmerTest'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:lme4':\n\n    lmer\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:stats':\n\n    step\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(lsr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'lsr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:corrr':\n\n    correlate\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(nlme)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'nlme'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:lme4':\n\n    lmList\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'patchwork'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:formattable':\n\n    area\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(performance)\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'psych'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:Hmisc':\n\n    describe\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(report)\nlibrary(reshape2)\nlibrary(rio)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'rio'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:lme4':\n\n    factorize\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ psych::%+%()       masks ggplot2::%+%()\n✖ psych::alpha()     masks ggplot2::alpha()\n✖ dplyr::collapse()  masks nlme::collapse()\n✖ tidyr::expand()    masks Matrix::expand()\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::lag()       masks stats::lag()\n✖ tidyr::pack()      masks Matrix::pack()\n✖ dplyr::src()       masks Hmisc::src()\n✖ dplyr::summarize() masks Hmisc::summarize()\n✖ tidyr::unpack()    masks Matrix::unpack()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: viridisLite\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n# Load and Format Data\n\nLoading from EI_Hurst_Measures_Expanded.tsv\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n### LOAD DATA\n\n# Base directory\nbase_dir <- \"../Data/participant_measures/\"\n\n# Create filenames\nfilenames <- paste0(base_dir, \"sub-Pilot\", sprintf(\"%02d\", 1:26), \"_EI_Hurst_Measures_Expanded.tsv\")\n\n# Function to read and process a single file\nread_and_process <- function(filename) {\n  # Read the file\n  data <- import(filename, fill = T)\n\n  # Extract the subject number from the filename\n  subject_number <- gsub(\".*sub-Pilot(\\\\d+).*\", \"\\\\1\", filename)\n\n  # Add the subject number column\n  data <- mutate(data, Subject = subject_number)\n  data <- data %>% select(Subject, everything())\n  # This column appears to have a lot of NAs\n  data <- data %>% select(!c(Rest_GABA_Gannet_tCr, Movie_GABA_Gannet_tCr))\n\n  return(data)\n}\n\n# Apply the function to each file\nlist_of_dataframes <- lapply(filenames, read_and_process)\n\n# Combine all dataframes into one and reformat some columns\ndf <- bind_rows(list_of_dataframes)\ndf$Subject <- as.numeric(df$Subject) # Change Subject column to numeric\nnum_subjects <- length(df$Subject) # Count the number of subjects\n\ndf <- df %>%\n  select(Subject, Rest_Glu, Movie_Glu, Rest_GABA, Movie_GABA, Rest_GABAplus, Movie_GABAplus, Rest_GABA_Gannet, Movie_GABA_Gannet, Rest_Hurst_FullFreq, Movie_Hurst_FullFreq, Rest_MeanFD, Movie_MeanFD, Rest_FWHM_SLASER, Rest_FWHM_Osprey, Movie_FWHM_Osprey, Movie_FWHM_SLASER, Rest_Glx, Movie_Glx, Rest_Glx_tCr, Movie_Glx_tCr, Rest_GABAplus_tCr, Movie_GABAplus_tCr) %>%\n  rename(Rest_GABAGannet = Rest_GABA_Gannet, Movie_GABAGannet = Movie_GABA_Gannet)\n\ntcr <- T # Use Creatine ratios for analysis purposes\nif (tcr == T) {\n  df <- subset(df, select = -c(Rest_Glx, Movie_Glx))\n  df$Rest_Glx <- df$Rest_Glx_tCr\n  df$Movie_Glx <- df$Movie_Glx_tCr\n  df <- subset(df, select = -c(Rest_Glx_tCr, Movie_Glx_tCr))\n  df <- subset(df, select = -c(Rest_GABAplus, Movie_GABAplus))\n  df$Rest_GABAplus <- df$Rest_GABAplus_tCr\n  df$Movie_GABAplus <- df$Movie_GABAplus_tCr\n  df <- subset(df, select = -c(Rest_GABAplus_tCr, Movie_GABAplus_tCr))\n}\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nLoad additional Hurst measures from Add_Hurst.tsv\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Load additional Hurst measures\n# Base directory\nbase_dir <- \"../Data/participant_measures/add_hurst_data/\"\n\n# Create filenames\nfilenames <- paste0(base_dir, \"sub-Pilot\", sprintf(\"%02d\", 1:26), \"_Add_Hurst.tsv\")\n\n# Function to read and process a single file\nread_and_process <- function(filename) {\n  # Read the file\n  data <- import(filename, fill = T)\n\n  # Extract the subject number from the filename\n  subject_number <- gsub(\".*sub-Pilot(\\\\d+).*\", \"\\\\1\", filename)\n\n  # Add the subject number column\n  data <- mutate(data, Subject = subject_number)\n  data <- data %>% select(Subject, everything())\n  # This column appears to have a lot of NAs\n\n  return(data)\n}\n\n# Apply the function to each file\nlist_of_dataframes <- lapply(filenames, read_and_process)\n\n# Combine all dataframes into one and reformat some columns\ndf_additionalHurst <- bind_rows(list_of_dataframes)\ndf_additionalHurst$Subject <- as.numeric(df_additionalHurst$Subject)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n# Original subjects demographics\n\nLoad SubjectInfo.csv\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Let's start by compiling our dataframe with subject demographics. We create a function to calculate age at scan from birthday and scan date.\n\n# Subject Info\nsubjects <- read.csv(\"../Data/participant_measures/SubjectInfo.csv\")\norig_subjects <- subjects\norig_subjects$Age <- as.numeric(interval(dmy(orig_subjects$DOB), dmy(orig_subjects$DOS)) / years(1))\n#keep original df:\nolddf <- df\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nOf the original 26 subjects we scanned:  \nmean age = 29.7172825  \nage range = 20.969863, 53.3961749  \nnumber of males = 11\n\n# Filter Data\n\nLet's remove any subject that has fMRI mean framewise displacement > 0.15mm, and anyone with a MRS FWHM > 10:\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## only include selected participants\nfmriremoved <- olddf %>% dplyr::filter(Rest_MeanFD > 0.15 | Movie_MeanFD >0.15)\nmrsremoved <- olddf %>% dplyr::filter(Rest_FWHM_SLASER > 10 | Rest_FWHM_Osprey > 10 | Movie_FWHM_Osprey > 10 | Movie_FWHM_SLASER > 10)\ndf <- df %>% dplyr::filter(Rest_MeanFD <= 0.15, Movie_MeanFD <= 0.15, Rest_FWHM_SLASER <= 10, Rest_FWHM_Osprey <= 10, Movie_FWHM_Osprey <= 10, Movie_FWHM_SLASER <= 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nwrite_csv(data.frame(df$Subject), \"Subjects_for_analysis.csv\")\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n# New Demographics\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsubjects <- subjects[df$Subject, ]\nnum_subjects <- count(subjects)\nyear <- substring(subjects$DOB, 7, 10)\nmonth <- substring(subjects$DOB, 4, 5)\nday <- substring(subjects$DOB, 1, 2)\n#subjects$DOB <- paste0(year, \"-\", month, \"-\", day)\nsubjects$Age <- as.numeric(interval(dmy(subjects$DOB), dmy(subjects$DOS)) / years(1))\nsubjects$Subject <- df$Subject\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nNumber of subjects lost: 7\nAfter filtering, \nmean age = 30.0837543  \nage range = 21.2896175, 53.3961749  \nnumber of males = 9\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsubs_clean <- dplyr::select(subjects, Subject, Age, Sex, Handedness)\n\ncolor.picker.sex <- function(z) {\n  if (z == \"M\") {\n    return(\"lightblue\")\n  } else if (z == \"F\") {\n    return(\"pink\")\n  } else {\n    return(\"white\")\n  }\n}\ncolor.picker.hand <- function(z) {\n  if (z == \"L\") {\n    return(\"red\")\n  } else if (z == \"R\") {\n    return(\"darkolivegreen1\")\n  } else {\n    return(\"white\")\n  }\n}\n\nsub_dem <- formattable(subs_clean, list(\n  Sex = formatter(\"span\",\n    style = x ~ style(\n      display = \"block\",\n      \"border-radius\" = \"4px\",\n      \"padding-right\" = \"4px\",\n      \"background-color\" = sapply(x, color.picker.sex)\n    )\n  ),\n  Handedness = formatter(\"span\",\n    style = x ~ style(\n      display = \"block\",\n      \"border-radius\" = \"4px\",\n      \"padding-right\" = \"4px\",\n      \"color\" = sapply(x, color.picker.hand)\n    )\n  )\n))\nsub_dem\n```\n\n::: {.cell-output-display}\n\n<table class=\"table table-condensed\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Subject </th>\n   <th style=\"text-align:right;\"> Age </th>\n   <th style=\"text-align:right;\"> Sex </th>\n   <th style=\"text-align:right;\"> Handedness </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 24.90137 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 24.85205 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 4 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 27.90959 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 6 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 22.01366 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 7 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 21.70137 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 9 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 24.50411 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 27.61644 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 11 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 26.04098 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 12 </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 31.34699 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 13 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 28.25683 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: red\">L</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 15 </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:right;\"> 53.39617 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 16 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:right;\"> 21.94247 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 18 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 21.28962 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 19 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:right;\"> 39.30874 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: pink\">F</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 20 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 37.74590 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 22 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:right;\"> 29.67213 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 23 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:right;\"> 38.79235 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 24 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:right;\"> 43.59290 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 26 </td>\n   <td style=\"text-align:right;\"> 26 </td>\n   <td style=\"text-align:right;\"> 26.70765 </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; background-color: lightblue\">M</span> </td>\n   <td style=\"text-align:right;\"> <span style=\"display: block; border-radius: 4px; padding-right: 4px; color: darkolivegreen1\">R</span> </td>\n  </tr>\n</tbody>\n</table>\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nHere are some summary statistics, grouped by sex, looking at age:\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsub_dem <- as.data.frame(sub_dem)\nsub_dem <- na.omit(sub_dem)\nsub_dem$Sex <- as.factor(sub_dem$Sex)\n## exclude participants with insufficient MRS/fMRI quality metrics\nprint(paste0(\"Mean: \", mean(sub_dem$Age), \" SD: \", sd(sub_dem$Age)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Mean: 30.0837542992897 SD: 8.67192921721759\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(sub_dem %>% group_by(Sex) %>% dplyr::summarize(n = length(Age), mean = round(mean(Age), 2), sd = round(sd(Age), 2), median = median(Age), IQR = IQR(Age), min = min(Age), max = max(Age)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  Sex       n  mean    sd median   IQR   min   max\n  <fct> <int> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 F        10  27.4  5.12   26.8  3.57  21.7  39.3\n2 M         9  33.1 11.0    29.7 13.9   21.3  53.4\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## Do males and females differ significantly by age?\nsub_dem_f <- dplyr::filter(sub_dem, Sex == \"F\")\nsub_dem_m <- dplyr::filter(sub_dem, Sex == \"M\")\nmf_byage <- t.test(sub_dem_f$Age, sub_dem_m$Age)\nprint(mf_byage)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  sub_dem_f$Age and sub_dem_m$Age\nt = -1.4389, df = 11.078, p-value = 0.1778\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -14.537894   3.037636\nsample estimates:\nmean of x mean of y \n 27.36001  33.11014 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nAnd a look at the distribution:\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(sub_dem_plot <- ggplot(sub_dem, aes(x = Age, group = Sex, fill = Sex)) +\n  geom_histogram(position = \"stack\", alpha = 0.6, color = \"black\", boundary = 10) +\n  theme_classic(base_size = 15) +\n  scale_fill_manual(values = c(\"pink\", \"lightblue\")) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  ylab(\"Participant Count\") +\n  xlab(\"Age (years)\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"Subject_Demographics_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nsub_dem_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n# Quality Assurance\n\nLooking at Hurst values from Welch Full Freq:\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# We are selecting Hurst values calculated from the full frequency range, rather than the bandpass-filtered results:\nfullfreq_hurst <- T\nif (fullfreq_hurst == T) {\n  df$Rest_Hurst <- df$Rest_Hurst_FullFreq\n  df$Movie_Hurst <- df$Movie_Hurst_FullFreq\n}\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nBefore calculating our results, let's look at the quality of our data. Let's start with full-width half-maximum, a quality measure for spectroscopy.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## only include selected participants\nfwhm_df <- dplyr::select(df, matches(\"FWHM\")) %>% rename(Rest_FWHM_MEGAPRESS = Rest_FWHM_Osprey, Movie_FWHM_MEGAPRESS = Movie_FWHM_Osprey) %>% reshape2::melt()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nfwhm_df$Condition <- gsub(\"_.*\", \"\", fwhm_df$variable)\nfwhm_df$Method <- gsub(\".*_.*_\", \"\", fwhm_df$variable)\nfwhm_df <- fwhm_df[, -1]\nnames(fwhm_df)[1] <- \"FWHM\"\nfwhm_df$Condition <- factor(fwhm_df$Condition, levels = c(\"Rest\", \"Movie\"))\nmp_super10 <- nrow(fwhm_df %>% dplyr::filter(Method == \"MEGAPRESS\", FWHM > 10))\nsl_super10 <- nrow(fwhm_df %>% dplyr::filter(Method == \"SLASER\", FWHM > 10))\nfwhm_annot <- data.frame(c(\"MEGAPRESS\", \"SLASER\"), c(paste0(\"n=\", mp_super10), paste0(\"n=\", sl_super10)))\nnames(fwhm_annot) <- c(\"Method\", \"Annotation\")\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nSummary statistics:\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(fwhm_stats <- fwhm_df %>% group_by(Condition, Method) %>% summarise(mean = round(mean(FWHM), 2), sd = round(sd(FWHM), 2)))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Condition'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n# Groups:   Condition [2]\n  Condition Method     mean    sd\n  <fct>     <chr>     <dbl> <dbl>\n1 Rest      MEGAPRESS  7.02  0.7 \n2 Rest      SLASER     8.52  0.7 \n3 Movie     MEGAPRESS  6.98  0.86\n4 Movie     SLASER     8.37  0.65\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(fwhm_plot <- ggplot(fwhm_df, aes(x = FWHM, group = Condition, fill = Condition)) +\n  geom_histogram(position = \"stack\", alpha = 0.6, color = \"black\", boundary = 10) +\n  facet_wrap(~ factor(Method, levels = c(\"SLASER\", \"MEGAPRESS\"))) +\n  theme_classic(base_size = 15) +\n  scale_fill_manual(values = c(\"#98FB98\", \"#FFA500\")) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  geom_vline(aes(xintercept = 10), linewidth = 1, color = \"#660033\", linetype = 2) +\n  geom_text(data = fwhm_annot, mapping = aes(x = 11, y = 2.5, label = Annotation), color = \"#660033\", size = 5, inherit.aes = F) +\n  ylab(\"Counts\") +\n  xlim(5, 13))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"FWHM_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nfwhm_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nWho are the subjects, and under which condition, do we have FWHM > 10?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nfwhm_df <- dplyr::select(olddf, grep(\"FWHM\", names(olddf)))\nfwhm_df <- fwhm_df %>% rename(Rest_FWHM_MEGAPRESS = Rest_FWHM_Osprey, Movie_FWHM_MEGAPRESS = Movie_FWHM_Osprey)\nfwhm_df$SubjectID <- orig_subjects$SubjectID\nfwhm_df <- reshape2::melt(fwhm_df)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing SubjectID as id variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nfwhm_df$Condition <- gsub(\"_.*\", \"\", fwhm_df$variable)\nfwhm_df$Method <- gsub(\".*_.*_\", \"\", fwhm_df$variable)\nfwhm_df <- fwhm_df %>% select(-c(\"variable\"))\nnames(fwhm_df)[1] <- \"Subject\"\nnames(fwhm_df)[2] <- \"FWHM\"\nfwhm_df$Condition <- factor(fwhm_df$Condition, levels = c(\"Rest\", \"Movie\"))\n(fwhm_df %>% filter(FWHM > 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Subject     FWHM Condition Method\n1 Pilot03 11.58177      Rest SLASER\n2 Pilot17 10.18196      Rest SLASER\n3 Pilot03 10.43966     Movie SLASER\n4 Pilot17 10.01789     Movie SLASER\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nNow let's take a look at quality for our fMRI data. Mean framewise displacement (mean FD) is an estimate of a participant's movement over time. In general, we want to see mean FD lower than 0.15.\n\nSummary statistics:\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmeanfd <- dplyr::select(df, Rest_MeanFD, Movie_MeanFD)\nmeanfd <- reshape2::melt(meanfd)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmeanfd$Condition <- gsub(\"_.*\", \"\", meanfd$variable)\nmeanfd <- meanfd[, -1]\nmeanfd$Condition <- factor(meanfd$Condition, levels = c(\"Rest\", \"Movie\"))\nnames(meanfd)[1] <- \"MeanFD\"\nmeanfd_superp15 <- nrow(meanfd %>% dplyr::filter(MeanFD > 0.15))\nmeanfd_annot <- data.frame(c(\"MeanFD\"), c(paste0(\"n=\", meanfd_superp15)))\nnames(meanfd_annot) <- c(\"Measure\", \"Annotation\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(fmri_stats <- meanfd %>% group_by(Condition) %>% summarise(mean = round(mean(MeanFD), 2), sd = round(sd(MeanFD), 2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  Condition  mean    sd\n  <fct>     <dbl> <dbl>\n1 Rest       0.1   0.03\n2 Movie      0.11  0.02\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(meanfd_plot <- ggplot(meanfd, aes(x = MeanFD, group = Condition, fill = Condition)) +\n  geom_histogram(position = \"stack\", alpha = 0.6, color = \"black\", center = 10) +\n  theme_classic(base_size = 15) +\n  scale_fill_manual(values = c(\"#98FB98\", \"#FFA500\")) +\n  theme(axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")) +\n  geom_vline(aes(xintercept = 0.15), linewidth = 1, color = \"#660033\", linetype = 2) +\n  geom_text(data = meanfd_annot, mapping = aes(x = 0.17, y = 4, label = Annotation), color = \"#660033\", size = 5, inherit.aes = F) +\n  ylab(\"Counts\") +\n  xlim(0, 0.25))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"MeanFD_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nmeanfd_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nWho are the subjects, and under what conditions, do we see meanFD > 0.15?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmeanfd2 <- dplyr::select(olddf, Rest_MeanFD, Movie_MeanFD)\nmeanfd2$SubjectID <- orig_subjects$SubjectID\nmeanfd2 <- reshape2::melt(meanfd2)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing SubjectID as id variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmeanfd2$Condition <- gsub(\"_.*\", \"\", meanfd2$variable)\nmeanfd2 <- meanfd2 %>% select(-c(\"variable\"))\nmeanfd2$Condition <- factor(meanfd2$Condition, levels = c(\"Rest\", \"Movie\"))\nnames(meanfd2)[1] <- \"Subject\"\nnames(meanfd2)[2] <- \"meanFD\"\n(meanfd2 %>% filter(meanFD > .15))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Subject    meanFD Condition\n1 Pilot05 0.1689652      Rest\n2 Pilot25 0.1517766      Rest\n3 Pilot05 0.1987184     Movie\n4 Pilot08 0.1529404     Movie\n5 Pilot14 0.1531843     Movie\n6 Pilot21 0.1729627     Movie\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Let's create a handy vector containing Hurst values and another containing glutamate values.\nglu <- dplyr::select(df, Rest_Glx, Movie_Glx)\nglu <- reshape2::melt(glu)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglu <- glu[, -1]\ngaba <- dplyr::select(df, Rest_GABAplus, Movie_GABAplus)\ngaba <- reshape2::melt(gaba)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngaba <- gaba[, -1]\nhurst <- dplyr::select(df, Rest_Hurst, Movie_Hurst)\nhurst <- reshape2::melt(hurst)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nhurst <- hurst[, -1]\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nIs meanFD correlated with Hurst?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmeanfd_rest <- dplyr::filter(meanfd, Condition == \"Rest\")\nmeanfd_movie <- dplyr::filter(meanfd, Condition == \"Movie\")\nmeanfd_rest.model <- cor.test(meanfd_rest$MeanFD, df$Rest_Hurst)\nprint(meanfd_rest.model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  meanfd_rest$MeanFD and df$Rest_Hurst\nt = -1.4582, df = 17, p-value = 0.163\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.6840465  0.1423292\nsample estimates:\n       cor \n-0.3334358 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmeanfd_movie.model <- cor.test(meanfd_movie$MeanFD, df$Movie_Hurst)\nprint(meanfd_movie.model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  meanfd_movie$MeanFD and df$Movie_Hurst\nt = -2.387, df = 17, p-value = 0.02888\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.77814823 -0.06060282\nsample estimates:\n       cor \n-0.5010208 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nt.test(meanfd_rest$MeanFD, meanfd_movie$MeanFD)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  meanfd_rest$MeanFD and meanfd_movie$MeanFD\nt = -0.69523, df = 35.692, p-value = 0.4914\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.02244491  0.01098769\nsample estimates:\n mean of x  mean of y \n0.09948482 0.10521344 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nfd_hurst <- data.frame(meanfd$MeanFD, hurst)\nnames(fd_hurst) <- c(\"MeanFD\", \"Hurst\")\nfd_hurst_model <- lm(Hurst ~ MeanFD, data = fd_hurst)\n(fd_hurst_model.summary <- summary(fd_hurst_model))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Hurst ~ MeanFD, data = fd_hurst)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.24149 -0.08640 -0.01106  0.07934  0.25309 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  1.17046    0.07314  16.004   <2e-16 ***\nMeanFD      -1.53171    0.69435  -2.206   0.0339 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1065 on 36 degrees of freedom\nMultiple R-squared:  0.1191,\tAdjusted R-squared:  0.09461 \nF-statistic: 4.866 on 1 and 36 DF,  p-value: 0.03386\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# pearson_fd_hurst <- cor.test(fd_hurst$MeanFD, fd_hurst$Hurst, method=\"pearson\")\nmeanfd$Hurst <- fd_hurst$Hurst\n\ndat_text <- data.frame(\n  label = c(paste(\"p = \", round(meanfd_rest.model$p.value, 2)), paste(\"p = \", round(meanfd_movie.model$p.value, 2))),\n  Condition = c(\"Rest\", \"Movie\"),\n  x = c(0.125, 0.125),\n  y = c(1.1, 1.22)\n)\n(meanfd_hurst_plot <- ggplot(data = meanfd, aes(x = MeanFD, y = Hurst, color = Condition, fill = Condition)) +\n  geom_point(color = \"black\") +\n  geom_smooth(method = \"lm\", color = \"blue\", aes(fill = Condition), alpha = 0.3) +\n  theme_classic(base_size = 12) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  theme(legend.position = \"none\")+\n  facet_wrap(~ factor(Condition, levels = c(\"Rest\", \"Movie\")), scales=\"free\") +\n  geom_text(\n    data = dat_text,\n    mapping = aes(x = x, y = y, label = label),\n    inherit.aes = FALSE\n  ) +\n  scale_x_continuous(guide = guide_axis(angle = 40)) +\n  theme(panel.spacing = unit(2, \"lines\")) +\n  #scale_color_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\")) #+\n  scale_fill_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"MeanFD_Hurst_Plot.png\", width = 7, height = 3, units = \"in\", res = 300)\nmeanfd_hurst_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nIs Glutamate or GABA correlated with FWHM?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(Restglxcortest <- cor.test(df$Rest_Glx, df$Rest_FWHM_SLASER))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  df$Rest_Glx and df$Rest_FWHM_SLASER\nt = -2.602, df = 17, p-value = 0.0186\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.7951469 -0.1049050\nsample estimates:\n       cor \n-0.5336848 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(Movieglxcortest <- cor.test(df$Movie_Glx, df$Movie_FWHM_SLASER))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  df$Movie_Glx and df$Movie_FWHM_SLASER\nt = -1.249, df = 17, p-value = 0.2286\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.6575385  0.1892094\nsample estimates:\n       cor \n-0.2899154 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(Restgabacortest <- cor.test(df$Rest_GABAplus, df$Rest_FWHM_Osprey))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  df$Rest_GABAplus and df$Rest_FWHM_Osprey\nt = -1.5552, df = 17, p-value = 0.1383\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.6956232  0.1206223\nsample estimates:\n       cor \n-0.3529229 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(Moviegabacortest <- cor.test(df$Movie_GABAplus, df$Movie_FWHM_Osprey))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  df$Movie_GABAplus and df$Movie_FWHM_Osprey\nt = -0.13104, df = 17, p-value = 0.8973\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.4790635  0.4286273\nsample estimates:\n        cor \n-0.03176647 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nIt appears Glutamate values are negatively correlated with their FWHM...\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglxfwhm <- dplyr::select(df, matches(\"FWHM_SLASER\")) %>% reshape2::melt()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglxfwhm$Condition <- gsub(\"_.*\", \"\", glxfwhm$variable)\nglxfwhm$Method <- gsub(\".*_.*_\", \"\", glxfwhm$variable)\nglxfwhm <- glxfwhm[, -c(1,4)]\nnames(glxfwhm)[1] <- \"FWHM\"\nglxfwhm$Glx <- glu\nglxfwhm <- glxfwhm %>% mutate(Condition = factor(Condition, levels = c(\"Rest\", \"Movie\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat_text <- data.frame(\n  label = c(paste(\"p = \", round(Restglxcortest$p.value, 2)), paste(\"p = \", round(Movieglxcortest$p.value, 2))),\n  Condition = c(\"Rest\", \"Movie\"),\n  x = c(9, 9),\n  y = c(1.3, 1.3)\n)\n(glu_FWHM_plot <- ggplot(data = glxfwhm, aes(x = FWHM, y = Glx, color = Condition, fill = Condition)) +\n  geom_point(color = \"black\") +\n  geom_smooth(method = \"lm\", color = \"blue\", aes(fill = Condition), alpha = 0.3) +\n  theme_classic(base_size = 12) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  theme(legend.position = \"none\") +\n  facet_wrap(~ factor(Condition, levels = c(\"Rest\", \"Movie\")), scales=\"free\") +\n  geom_text(\n    data = dat_text,\n    mapping = aes(x = x, y = y, label = label),\n    inherit.aes = FALSE\n  ) +\n  ylab(\"Glx / tCr\") + \n  scale_x_continuous(guide = guide_axis(angle = 40)) +\n  theme(panel.spacing = unit(2, \"lines\")) +\n  #scale_color_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\")) #+\n  scale_fill_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"Glutamate_FWHM_Plot.png\", width = 7, height = 3, units = \"in\", res = 300)\nglu_FWHM_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngabafwhm <- dplyr::select(df, matches(\"FWHM_Osprey\")) %>% reshape2::melt()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngabafwhm$Condition <- gsub(\"_.*\", \"\", gabafwhm$variable)\ngabafwhm$Method <- gsub(\".*_.*_\", \"\", gabafwhm$variable)\ngabafwhm <- gabafwhm[, -c(1,4)]\nnames(gabafwhm)[1] <- \"FWHM\"\ngabafwhm$gaba <- gaba\ngabafwhm <- gabafwhm %>% mutate(Condition = factor(Condition, levels = c(\"Rest\", \"Movie\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat_text <- data.frame(\n  label = c(paste(\"p = \", round(Restgabacortest$p.value, 2)), paste(\"p = \", round(Moviegabacortest$p.value, 2))),\n  Condition = c(\"Rest\", \"Movie\"),\n  x = c(8, 8),\n  y = c(.55, .55)\n)\n(gaba_FWHM_plot <- ggplot(data = gabafwhm, aes(x = FWHM, y = gaba, color = Condition, fill = Condition)) +\n  geom_point(color = \"black\") +\n  geom_smooth(method = \"lm\", color = \"blue\", aes(fill = Condition), alpha = 0.3) +\n  theme_classic(base_size = 12) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  theme(legend.position = \"none\") +\n  facet_wrap(~ factor(Condition, levels = c(\"Rest\", \"Movie\")), scales=\"free\") +\n  geom_text(\n    data = dat_text,\n    mapping = aes(x = x, y = y, label = label),\n    inherit.aes = FALSE\n  ) +\n  ylab(\"GABA+ / tCr\") + \n  scale_x_continuous(guide = guide_axis(angle = 40)) +\n  theme(panel.spacing = unit(2, \"lines\")) +\n  scale_fill_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"GABA_FWHM_Plot.png\", width = 7, height = 3, units = \"in\", res = 300)\ngaba_FWHM_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(gluandgaba_FWHM_plot <- glu_FWHM_plot / gaba_FWHM_plot + plot_layout(guides = 'auto', axes = 'collect', axis_titles = 'collect'))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\nAre FWHM different between MEGAPRESS and sLASER?\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nt.test(df$Rest_FWHM_SLASER, df$Rest_FWHM_Osprey)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  df$Rest_FWHM_SLASER and df$Rest_FWHM_Osprey\nt = 6.5977, df = 35.996, p-value = 1.114e-07\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.036627 1.956797\nsample estimates:\nmean of x mean of y \n 8.517111  7.020399 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nt.test(df$Movie_FWHM_SLASER, df$Movie_FWHM_Osprey)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  df$Movie_FWHM_SLASER and df$Movie_FWHM_Osprey\nt = 5.6114, df = 33.559, p-value = 2.874e-06\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 0.8851927 1.8911858\nsample estimates:\nmean of x mean of y \n 8.367188  6.978999 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n# Results \n\nLet's move on to results! How does Hurst change with condition?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nhurst_df <- dplyr::select(df, Subject, Rest_Hurst, Movie_Hurst)\nhurst_effect_size <- cohensD(hurst_df$Rest_Hurst, hurst_df$Movie_Hurst)\n(ttest_hurst <- t.test(hurst_df$Rest_Hurst, hurst_df$Movie_Hurst, paired = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  hurst_df$Rest_Hurst and hurst_df$Movie_Hurst\nt = -3.8616, df = 18, p-value = 0.001143\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.11666745 -0.03445087\nsample estimates:\nmean difference \n    -0.07555916 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nhurst_stats <- hurst_df\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nhurst_df <- reshape2::melt(hurst_df, id.vars = c(\"Subject\"))\nhurst_df$variable <- gsub(\"_.*\", \"\", hurst_df$variable)\nnames(hurst_df) <- c(\"Sub\", \"Condition\", \"Hurst\")\nhurst_df$Condition <- factor(hurst_df$Condition, levels = c(\"Rest\", \"Movie\"))\n\n#hurst_df$Sex <- sub_dem$Sex\nhurst_df <- hurst_df %>% left_join(sub_dem, by = c(\"Sub\" = \"Subject\"))\n\nhurst_m <- hurst_df %>% dplyr::filter(Sex == \"M\")\nhurst_f <- hurst_df %>% dplyr::filter(Sex == \"F\")\nt.test(hurst_m$Hurst, hurst_f$Hurst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  hurst_m$Hurst and hurst_f$Hurst\nt = 0.8975, df = 24.523, p-value = 0.3782\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.04380539  0.11135273\nsample estimates:\nmean of x mean of y \n 1.031471  0.997697 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nhurst_df$Age <- sub_dem$Age\ncor.test(hurst_df$Hurst, hurst_df$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  hurst_df$Hurst and hurst_df$Age\nt = -1.3789, df = 36, p-value = 0.1764\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.5073346  0.1030873\nsample estimates:\n       cor \n-0.2239773 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndeltaH <- df$Movie_Hurst - df$Rest_Hurst\ndeltaH_df <- data.frame(deltaH, sub_dem$Sex, sub_dem$Age)\nnames(deltaH_df) <- c(\"deltaH\", \"Sex\", \"Age\")\ndeltaH_m <- deltaH_df %>% dplyr::filter(Sex == \"M\")\ndeltaH_f <- deltaH_df %>% dplyr::filter(Sex == \"F\")\nt.test(deltaH_m$deltaH, deltaH_f$deltaH)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  deltaH_m$deltaH and deltaH_f$deltaH\nt = 1.3237, df = 15.34, p-value = 0.205\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.0311998  0.1339795\nsample estimates:\nmean of x mean of y \n0.1026064 0.0512166 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor.test(deltaH_df$deltaH, deltaH_df$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  deltaH_df$deltaH and deltaH_df$Age\nt = 1.1183, df = 17, p-value = 0.279\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2184139  0.6398927\nsample estimates:\n      cor \n0.2617638 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminmax <- c(min(hurst_df$Hurst), max(hurst_df$Hurst))\nspace <- (minmax[2] - minmax[1]) / 10\n(hurst_boxplot <- ggplot(hurst_df, aes(x = Condition, y = Hurst, fill = Condition)) +\n  geom_boxplot(outlier.shape = NA) +\n  geom_point(alpha = 0.6, position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), aes(group = Sub)) +\n  geom_line(aes(group = Sub), position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), alpha = 0.5) +\n  scale_fill_manual(values = c(\"#98FB98\", \"#FFA500\"), guide = \"none\") +\n  theme_classic(base_size = 15) +\n  ylim(minmax[1] - space, minmax[2] + space) +\n  theme(axis.title = element_text(face = \"bold\"), legend.position = \"none\") +\n  annotate(geom = \"text\", x = 1.5, y = minmax[2] + space / 2, label = paste(\n    # roundedpvalue,\n    \"mean difference [95% CI] = \",\n    round(as.numeric(ttest_hurst$estimate), 2),\n    \"[\",\n    round(as.numeric(ttest_hurst$conf.int)[1], 2),\n    \" to \",\n    round(as.numeric(ttest_hurst$conf.int)[2], 2),\n    \"]\",\n    \"\\n Cohen's D = \",\n    round(hurst_effect_size, 2)\n  ))\n)\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"HE_v_Condition_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nhurst_boxplot\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n## Glx\n\nHow does glutamate change with condition?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglu_df <- dplyr::select(df, Subject, Rest_Glx, Movie_Glx)\nglu_effect_size <- cohensD(glu_df$Rest_Glx, glu_df$Movie_Glx)\n(ttest_glu <- t.test(glu_df$Rest_Glx, glu_df$Movie_Glx, paired = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  glu_df$Rest_Glx and glu_df$Movie_Glx\nt = 1.7827, df = 18, p-value = 0.09151\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.008683338  0.105974259\nsample estimates:\nmean difference \n     0.04864546 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglu_df <- reshape2::melt(glu_df, id.vars = c(\"Subject\"))\nglu_df$variable <- gsub(\"_.*\", \"\", glu_df$variable)\nnames(glu_df) <- c(\"Sub\", \"Condition\", \"Glx\")\nglu_df$Condition <- factor(glu_df$Condition, levels = c(\"Rest\", \"Movie\"))\n\nglu_df$Sex <- sub_dem$Sex\nglu_m <- glu_df %>% dplyr::filter(Sex == \"M\")\nglu_f <- glu_df %>% dplyr::filter(Sex == \"F\")\nt.test(glu_m$Glx, glu_f$Glx)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  glu_m$Glx and glu_f$Glx\nt = -1.1613, df = 34.963, p-value = 0.2534\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.11233177  0.03058408\nsample estimates:\nmean of x mean of y \n 1.140228  1.181102 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglu_df$Age <- sub_dem$Age\ncor.test(glu_df$Glx, glu_df$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  glu_df$Glx and glu_df$Age\nt = -2.4327, df = 36, p-value = 0.02008\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.62085050 -0.06371267\nsample estimates:\n       cor \n-0.3757429 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminmax <- c(min(glu_df$Glx), max(glu_df$Glx))\nspace <- (minmax[2] - minmax[1]) / 10\n(glu_boxplot <- ggplot(glu_df, aes(x = Condition, y = Glx, fill = Condition)) +\n  scale_fill_manual(values = c(\"#98FB98\", \"#FFA500\"), guide = \"none\") +\n  theme_classic(base_size = 15) +\n  theme(axis.title = element_text(face = \"bold\"), legend.position = \"none\") +\n  geom_boxplot(outlier.shape = NA) +\n  geom_point(alpha = 0.6, position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), aes(group = Sub)) +\n  geom_line(aes(group = Sub), position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), alpha = 0.5) +\n  ylab(\"Glx / tCr\") +\n  ylim(minmax[1] - space, minmax[2] + space) +\n  annotate(geom = \"text\", x = 1.5, y = minmax[2] + space / 2, label = paste(\n    \"mean difference [95% CI] = \",\n    round(as.numeric(ttest_glu$estimate), 2),\n    \"[\",\n    round(as.numeric(ttest_glu$conf.int)[1], 2),\n    \" to \",\n    round(as.numeric(ttest_glu$conf.int)[2], 2),\n    \"]\",\n    \"\\n Cohen's D = \",\n    round(glu_effect_size, 2)\n  ))\n)\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"Glutamate_v_Condition_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nglu_boxplot\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nt.test(df$Rest_Glx, df$Movie_Glx, paired = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  df$Rest_Glx and df$Movie_Glx\nt = 1.7827, df = 18, p-value = 0.09151\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.008683338  0.105974259\nsample estimates:\nmean difference \n     0.04864546 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglu_stats <- glu_df %>% group_by(Condition) %>% summarise(mean = round(mean(Glx), 2), sd = round(sd(Glx), 2))\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n## GABA+\nHow does GABA change with condition?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngaba_df <- dplyr::select(df, Subject, Rest_GABAplus, Movie_GABAplus)\ngaba_effect_size <- cohensD(gaba_df$Rest_GABAplus, gaba_df$Movie_GABAplus)\n(ttest_gaba <- t.test(gaba_df$Rest_GABAplus, gaba_df$Movie_GABAplus, paired = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  gaba_df$Rest_GABAplus and gaba_df$Movie_GABAplus\nt = 0.68333, df = 18, p-value = 0.5031\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.02796285  0.05492089\nsample estimates:\nmean difference \n     0.01347902 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngaba_df <- reshape2::melt(gaba_df, id.vars = c(\"Subject\"))\ngaba_df$variable <- gsub(\"_.*\", \"\", gaba_df$variable)\nnames(gaba_df) <- c(\"Sub\", \"Condition\", \"GABAplus\")\ngaba_df$Condition <- factor(gaba_df$Condition, levels = c(\"Rest\", \"Movie\"))\n\ngaba_df$Sub <- gaba_df$Sub\ngaba_df$Sex <- sub_dem$Sex\ngaba_m <- gaba_df %>% dplyr::filter(Sex == \"M\")\ngaba_f <- gaba_df %>% dplyr::filter(Sex == \"F\")\nt.test(gaba_m$GABAplus, gaba_f$GABAplus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  gaba_m$GABAplus and gaba_f$GABAplus\nt = 0.29061, df = 35.998, p-value = 0.773\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.03601313  0.04806022\nsample estimates:\nmean of x mean of y \n0.4476247 0.4416011 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngaba_df$Age <- sub_dem$Age\ncor.test(gaba_df$GABAplus, gaba_df$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  gaba_df$GABAplus and gaba_df$Age\nt = -0.18772, df = 36, p-value = 0.8521\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.3474812  0.2913241\nsample estimates:\n        cor \n-0.03127165 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminmax <- c(min(gaba_df$GABAplus), max(gaba_df$GABAplus))\nspace <- (minmax[2] - minmax[1]) / 10\n(gaba_boxplot <- ggplot(gaba_df, aes(x = Condition, y = GABAplus, fill = Condition)) +\n  scale_fill_manual(values = c(\"#98FB98\", \"#FFA500\"), guide = \"none\") +\n  theme_classic(base_size = 15) +\n  ylab(\"GABA+ / tCr\") +\n  theme(axis.title = element_text(face = \"bold\"), legend.position = \"none\") +\n  geom_boxplot(outlier.shape = NA) +\n  geom_point(alpha = 0.6, position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), aes(group = Sub)) +\n  geom_line(aes(group = Sub), position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), alpha = 0.5) +\n  ylim(minmax[1] - space, minmax[2] + space) +\n  annotate(geom = \"text\", x = 1.5, y = minmax[2] + space / 2, label = paste(\n    \"mean difference [95% CI] = \",\n    round(as.numeric(ttest_gaba$estimate), 2),\n    \"[\",\n    round(as.numeric(ttest_gaba$conf.int)[1], 2),\n    \" to \",\n    round(as.numeric(ttest_gaba$conf.int)[2], 2),\n    \"]\",\n    \"\\n Cohen's D = \",\n    round(gaba_effect_size, 2)\n  ))\n)\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"GABA_v_Condition_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\ngaba_boxplot\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngaba_stats <- gaba_df %>% group_by(Condition) %>% summarise(mean = round(mean(GABAplus), 2), sd = round(sd(GABAplus), 2))\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n## EI\n\n\nHow does EI change with condition?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nei_df <- as.data.frame(glu_df$Glx / gaba_df$GABAplus)\nei_df$Condition <- gaba_df$Condition\nnames(ei_df)[1] <- \"EI\"\nrest_ei <- ei_df %>% dplyr::filter(Condition == \"Rest\")\nrest_ei <- rest_ei[, 1]\nmovie_ei <- ei_df %>% dplyr::filter(Condition == \"Movie\")\nmovie_ei <- movie_ei[, 1]\nei_effect_size <- cohensD(rest_ei, movie_ei)\n(ttest_ei <- t.test(rest_ei, movie_ei, paired = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  rest_ei and movie_ei\nt = 0.23674, df = 18, p-value = 0.8155\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.2619278  0.3284533\nsample estimates:\nmean difference \n      0.0332627 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nei_df$Condition <- factor(ei_df$Condition, levels = c(\"Rest\", \"Movie\"))\nei_df$Sub <- gaba_df$Sub\nei_df$Sex <- sub_dem$Sex\nei_m <- ei_df %>% dplyr::filter(Sex == \"M\")\nei_f <- ei_df %>% dplyr::filter(Sex == \"F\")\nt.test(ei_m$EI, ei_f$EI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  ei_m$EI and ei_f$EI\nt = -0.98887, df = 35.019, p-value = 0.3295\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.4486723  0.1547420\nsample estimates:\nmean of x mean of y \n 2.588194  2.735159 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nei_df$Age <- sub_dem$Age\ncor.test(ei_df$EI, ei_df$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ei_df$EI and ei_df$Age\nt = -0.97845, df = 36, p-value = 0.3344\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.4571125  0.1673448\nsample estimates:\n       cor \n-0.1609489 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminmax <- c(min(ei_df$EI), max(ei_df$EI))\nspace <- (minmax[2] - minmax[1]) / 10\n(ei_boxplot <- ggplot(ei_df, aes(x = Condition, y = EI, fill = Condition)) +\n  scale_fill_manual(values = c(\"#98FB98\", \"#FFA500\"), guide = \"none\") +\n  ylab(\"E/I\") +\n  theme_classic(base_size = 15) +\n  theme(axis.title = element_text(face = \"bold\"), legend.position = \"none\") +\n  geom_boxplot(outlier.shape = NA) +\n  geom_point(alpha = 0.6, position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), aes(group = Sub)) +\n  geom_line(aes(group = Sub), position = position_jitterdodge(dodge.width = 0.1, jitter.width = 0.01, seed = 123), alpha = 0.5) +\n  ylim(minmax[1] - space, minmax[2] + space) +\n  annotate(geom = \"text\", x = 1.5, y = minmax[2], label = paste(\n    \"mean difference [95% CI] = \",\n    round(as.numeric(ttest_ei$estimate), 2),\n    \"[\",\n    round(as.numeric(ttest_ei$conf.int)[1], 2),\n    \" to \",\n    round(as.numeric(ttest_ei$conf.int)[2], 2),\n    \"]\",\n    \"\\n Cohen's D = \",\n    round(ei_effect_size, 2)\n  ))\n)\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"EI_Boxplot.png\", width = 7, height = 4, units = \"in\", res = 300)\nei_boxplot\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nei_stats <- ei_df %>% group_by(Condition) %>% summarise(mean = round(mean(EI), 2), sd = round(sd(EI), 2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmrsresults_plot <- glu_boxplot + gaba_boxplot + ei_boxplot + plot_layout(ncol=2)\nggsave(\"MRSResults_plot.png\", plot = mrsresults_plot, width = 11, height = 9, dpi = 300, units = \"in\")\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\nIs Hurst correlated with glutamate?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglu <- dplyr::select(df, Rest_Glx, Movie_Glx)\nglu_cond <- glu\nglu <- reshape2::melt(glu)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglu_cond <- reshape2::melt(glu_cond)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglu <- glu[, -1]\nglu_cond$Condition <- gsub(\"_.*\", \"\", glu_cond$variable)\nglu_cond <- glu_cond[, -1]\nnames(glu_cond)[1] <- \"Glx\"\nhurst <- dplyr::select(df, Rest_Hurst, Movie_Hurst)\nhurst <- reshape2::melt(hurst)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nhurst_cond <- hurst\nhurst <- hurst[, -1]\nhurst_cond$Condition <- gsub(\"_.*\", \"\", hurst_cond$variable)\nhurst_cond <- hurst_cond[, -1]\nnames(hurst_cond)[1] <- \"Hurst\"\ngh_df <- data.frame(hurst_cond$Condition, hurst_cond$Hurst, glu_cond$Glx)\nnames(gh_df) <- c(\"Condition\", \"Hurst\", \"Glx\")\n\ngh_rest <- dplyr::filter(gh_df, Condition == \"Rest\")\ngh_rest_pearson <- cor.test(gh_rest$Hurst, gh_rest$Glx, method = \"pearson\")\nprint(gh_rest_pearson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  gh_rest$Hurst and gh_rest$Glx\nt = -0.35629, df = 17, p-value = 0.726\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.5199683  0.3830981\nsample estimates:\n        cor \n-0.08609172 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngh_movie <- dplyr::filter(gh_df, Condition == \"Movie\")\ngh_movie_pearson <- cor.test(gh_movie$Hurst, gh_movie$Glx, method = \"pearson\")\nprint(gh_movie_pearson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  gh_movie$Hurst and gh_movie$Glx\nt = -0.82498, df = 17, p-value = 0.4208\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.5971894  0.2832526\nsample estimates:\n       cor \n-0.1961988 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglu_hurst_model <- lm(Hurst ~ Glx, data = gh_df)\n(glu_hurst_model.summary <- summary(glu_hurst_model))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Hurst ~ Glx, data = gh_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.28149 -0.06648 -0.01161  0.05871  0.25730 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   1.2552     0.1929   6.505 1.48e-07 ***\nGlx          -0.2079     0.1654  -1.257    0.217    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1111 on 36 degrees of freedom\nMultiple R-squared:  0.04206,\tAdjusted R-squared:  0.01545 \nF-statistic: 1.581 on 1 and 36 DF,  p-value: 0.2168\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat_text <- data.frame(\n  label = c(paste(\"p = \", round(gh_rest_pearson$p.value, 2)), paste(\"p = \", round(gh_movie_pearson$p.value, 2))),\n  Condition = c(\"Rest\", \"Movie\"),\n  x = c(1.25, 1.25),\n  y = c(1.25, 1.22)\n)\n(glu_hurst_plot <- ggplot(data = gh_df, aes(x = Glx, y = Hurst, color = Condition, fill = Condition)) +\n  geom_point(color = \"black\") +\n  geom_smooth(method = \"lm\", color = \"blue\", aes(fill = Condition), alpha = 0.3) +\n  theme_classic(base_size = 12) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  theme(legend.position = \"none\") +\n  xlab(\"Glx / tCr\") +\n  ylab(\"Hurst\") +\n  facet_wrap(~ factor(Condition, levels = c(\"Rest\", \"Movie\"))) +\n  geom_text(\n    data = dat_text,\n    mapping = aes(x = x, y = y, label = label),\n    inherit.aes = FALSE\n  ) +\n  scale_x_continuous(guide = guide_axis(angle = 40)) +\n  scale_fill_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\")) +\n  theme(panel.spacing = unit(.1, \"lines\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"Glutamate_Hurst_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nglu_hurst_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\nIs Hurst correlated with GABA?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngaba <- dplyr::select(df, Rest_GABAplus, Movie_GABAplus)\ngaba <- reshape2::melt(gaba)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNo id variables; using all as measure variables\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngaba$Condition <- gsub(\"_.*\", \"\", gaba$variable)\ngaba <- gaba[, -1]\nnames(gaba)[1] <- \"GABAplus\"\ngabah_df <- data.frame(hurst, gaba)\nnames(gabah_df)[1] <- \"Hurst\"\npearson_hurst_gaba <- cor.test(gabah_df$GABAplus, gabah_df$Hurst, method = \"pearson\")\n\ngabah_rest <- dplyr::filter(gabah_df, Condition == \"Rest\")\ngabah_rest_pearson <- cor.test(gabah_rest$Hurst, gabah_rest$GABAplus, method = \"pearson\")\nprint(gabah_rest_pearson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  gabah_rest$Hurst and gabah_rest$GABAplus\nt = -2.0745, df = 17, p-value = 0.05353\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.750461818  0.005970427\nsample estimates:\n       cor \n-0.4494577 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngabah_movie <- dplyr::filter(gabah_df, Condition == \"Movie\")\ngabah_movie_pearson <- cor.test(gabah_movie$Hurst, gabah_movie$GABAplus, method = \"pearson\")\nprint(gabah_movie_pearson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  gabah_movie$Hurst and gabah_movie$GABAplus\nt = -0.7323, df = 17, p-value = 0.474\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.5827916  0.3034382\nsample estimates:\n       cor \n-0.1748728 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat_text <- data.frame(\n  label = c(paste(\"p = \", round(gabah_rest_pearson$p.value, 2)), paste(\"p = \", round(gabah_movie_pearson$p.value, 2))),\n  Condition = c(\"Rest\", \"Movie\"),\n  x = c(.55, .55),\n  y = c(1.25, 1.25)\n)\n(gaba_hurst_plot <- ggplot(data = gabah_df, aes(x = GABAplus, y = Hurst, color = Condition, fill = Condition)) +\n  geom_point(color = \"black\") +\n  geom_smooth(method = \"lm\", color = \"blue\", aes(fill = Condition), alpha = 0.3) +\n  theme_classic(base_size = 12) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  theme(legend.position = \"none\")+\n  xlab(\"GABA+ / tCr\") +\n  ylab(\"Hurst\") +\n  facet_wrap(~ factor(Condition, levels = c(\"Rest\", \"Movie\"))) +\n  geom_text(\n    data = dat_text,\n    mapping = aes(x = x, y = y, label = label),\n    inherit.aes = FALSE\n  )+\n  scale_x_continuous(guide = guide_axis(angle = 40)) +\n  theme(panel.spacing = unit(.1, \"lines\")) +\n  scale_fill_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"GABA_Hurst_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\ngaba_hurst_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\nIs EI correlated with Hurst?\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nei <- as.data.frame(glu / gaba$GABAplus)\nei$Condition <- gaba$Condition\nnames(ei)[1] <- \"EI\"\neih_df <- data.frame(hurst, ei)\nnames(eih_df)[1] <- \"Hurst\"\npearson_hurst_ei <- cor.test(eih_df$EI, eih_df$Hurst, method = \"pearson\")\n\neih_rest <- dplyr::filter(eih_df, Condition == \"Rest\")\neih_rest_pearson <- cor.test(eih_rest$Hurst, eih_rest$EI, method = \"pearson\")\nprint(eih_rest_pearson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  eih_rest$Hurst and eih_rest$EI\nt = 0.93641, df = 17, p-value = 0.3622\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2587679  0.6139239\nsample estimates:\n      cor \n0.2214721 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\neih_movie <- dplyr::filter(eih_df, Condition == \"Movie\")\neih_movie_pearson <- cor.test(eih_movie$Hurst, eih_movie$EI, method = \"pearson\")\nprint(eih_movie_pearson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  eih_movie$Hurst and eih_movie$EI\nt = -0.19426, df = 17, p-value = 0.8483\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.4907807  0.4160402\nsample estimates:\n        cor \n-0.04706247 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat_text <- data.frame(\n  label = c(paste(\"p = \", round(eih_rest_pearson$p.value, 2)), paste(\"p = \", round(eih_movie_pearson$p.value, 2))),\n  Condition = c(\"Rest\", \"Movie\"),\n  x = c(2.3, 2.3),\n  y = c(1.25, 1.25)\n)\n(ei_hurst_plot <- ggplot(data = eih_df, aes(x = EI, y = Hurst, color = Condition, fill = Condition)) +\n  geom_point(color = \"black\") +\n  geom_smooth(method = \"lm\", color = \"blue\", aes(fill = Condition), alpha = 0.3) +\n  theme_classic(base_size = 12) +\n  theme(\n    strip.background = element_blank(), strip.text.x = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(face = \"bold\"), legend.title = element_text(face = \"bold\")\n  ) +\n  theme(legend.position = \"none\") +\n  xlab(\"E/I\") +\n  ylab(\"Hurst\") +\n  facet_wrap(~ factor(Condition, levels = c(\"Rest\", \"Movie\"))) +\n  geom_text(\n    data = dat_text,\n    mapping = aes(x = x, y = y, label = label),\n    inherit.aes = FALSE\n  ) +\n  scale_x_continuous(guide = guide_axis(angle = 40)) +\n  theme(panel.spacing = unit(0.1, \"lines\"))+\n  scale_fill_manual(values = c(\"Rest\" = \"green\", \"Movie\" = \"orange\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npng(file = \"EI_Hurst_Plot.png\", width = 7, height = 4, units = \"in\", res = 300)\nei_hurst_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlayout <- \"\nAABB\n#CC#\n\"\nglu_hurst_plot + gaba_hurst_plot + ei_hurst_plot + plot_layout(design=layout, guides = 'collect', axes = 'collect', axis_titles = 'collect') + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(size = 11))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n# Linear Mixed Effects (Welch Full Freq)\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_lme <- df %>%\n  select(Subject, Rest_Hurst_FullFreq, Movie_Hurst_FullFreq, Rest_Glx, Movie_Glx, Rest_GABAplus, Movie_GABAplus, Rest_FWHM_SLASER, Movie_FWHM_SLASER, Rest_FWHM_Osprey, Movie_FWHM_Osprey, Rest_MeanFD, Movie_MeanFD) %>%\n  rename(Rest_Hurst = Rest_Hurst_FullFreq, Movie_Hurst = Movie_Hurst_FullFreq, Rest_FWHMsLASER = Rest_FWHM_SLASER, Movie_FWHMsLASER = Movie_FWHM_SLASER, Rest_FWHMOsprey = Rest_FWHM_Osprey, Movie_FWHMOsprey = Movie_FWHM_Osprey)\nsubjects_lme <- subjects %>% select(Age, Subject, Sex)\ndf_lme <- full_join(df_lme, subjects_lme, by = \"Subject\")\ndf_lme$Sex <- as.factor(df_lme$Sex)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_lme <- df_lme %>% pivot_longer(\n  cols = -c(Age, Sex, Subject), # Exclude the Subject column from the transformation\n  names_to = c(\"Condition\", \".value\"), # Split original column names\n  names_pattern = \"(.*)_(.*)\" # Pattern to split the original column names\n)\ndf_lme$EI <- df_lme$Glx / df_lme$GABAplus\ndf_lme$Condition <- as.factor(df_lme$Condition)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmodel <- lme4::lmer(Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD + (1 | Subject), data = df_lme)\n\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD + (1 |  \n    Subject)\n   Data: df_lme\n\nREML criterion at convergence: -53\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-1.40059 -0.55153 -0.00332  0.42342  2.06264 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n Subject  (Intercept) 0.006538 0.08086 \n Residual             0.004075 0.06384 \nNumber of obs: 38, groups:  Subject, 19\n\nFixed effects:\n              Estimate Std. Error t value\n(Intercept)    0.98311    0.29441   3.339\nEI             0.03788    0.03177   1.192\nConditionRest -0.08665    0.02171  -3.991\nFWHMsLASER     0.02576    0.03028   0.851\nFWHMOsprey    -0.01781    0.02038  -0.874\nMeanFD        -1.17116    0.73523  -1.593\n\nCorrelation of Fixed Effects:\n            (Intr) EI     CndtnR FWHMLA FWHMOs\nEI          -0.495                            \nConditinRst  0.102 -0.110                     \nFWHMsLASER  -0.766  0.308 -0.230              \nFWHMOsprey  -0.238 -0.110  0.084 -0.326       \nMeanFD      -0.298 -0.009  0.205 -0.097  0.253\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmodel <- lmerTest::lmer(Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD + (1 | Subject), data = df_lme)\n\n(model_summary <- summary(model))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD + (1 |  \n    Subject)\n   Data: df_lme\n\nREML criterion at convergence: -53\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-1.40059 -0.55153 -0.00332  0.42342  2.06264 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n Subject  (Intercept) 0.006538 0.08086 \n Residual             0.004075 0.06384 \nNumber of obs: 38, groups:  Subject, 19\n\nFixed effects:\n              Estimate Std. Error       df t value Pr(>|t|)   \n(Intercept)    0.98311    0.29441 26.57851   3.339  0.00250 **\nEI             0.03788    0.03177 25.22879   1.192  0.24425   \nConditionRest -0.08665    0.02171 15.33813  -3.991  0.00113 **\nFWHMsLASER     0.02576    0.03028 31.52332   0.851  0.40127   \nFWHMOsprey    -0.01781    0.02038 22.00582  -0.874  0.39154   \nMeanFD        -1.17116    0.73523 29.98211  -1.593  0.12167   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) EI     CndtnR FWHMLA FWHMOs\nEI          -0.495                            \nConditinRst  0.102 -0.110                     \nFWHMsLASER  -0.766  0.308 -0.230              \nFWHMOsprey  -0.238 -0.110  0.084 -0.326       \nMeanFD      -0.298 -0.009  0.205 -0.097  0.253\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(r2_values <- performance::r2(model))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# R2 for Mixed Models\n\n  Conditional R2: 0.690\n     Marginal R2: 0.194\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(confint_values <- lme4::confint.merMod(model, method=\"Wald\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    2.5 %      97.5 %\n.sig01                 NA          NA\n.sigma                 NA          NA\n(Intercept)    0.40608753  1.56013402\nEI            -0.02438831  0.10014255\nConditionRest -0.12920708 -0.04409970\nFWHMsLASER    -0.03358505  0.08511422\nFWHMOsprey    -0.05776072  0.02213261\nMeanFD        -2.61219506  0.26986758\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nconfint_values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    2.5 %      97.5 %\n.sig01                 NA          NA\n.sigma                 NA          NA\n(Intercept)    0.40608753  1.56013402\nEI            -0.02438831  0.10014255\nConditionRest -0.12920708 -0.04409970\nFWHMsLASER    -0.03358505  0.08511422\nFWHMOsprey    -0.05776072  0.02213261\nMeanFD        -2.61219506  0.26986758\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nreport(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWe fitted a linear mixed model (estimated using REML and nloptwrap optimizer)\nto predict Hurst with EI, Condition, FWHMsLASER, FWHMOsprey and MeanFD\n(formula: Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD). The model\nincluded Subject as random effect (formula: ~1 | Subject). The model's total\nexplanatory power is substantial (conditional R2 = 0.69) and the part related\nto the fixed effects alone (marginal R2) is of 0.19. The model's intercept,\ncorresponding to EI = 0, Condition = Movie, FWHMsLASER = 0, FWHMOsprey = 0 and\nMeanFD = 0, is at 0.98 (95% CI [0.38, 1.58], t(30) = 3.34, p = 0.002). Within\nthis model:\n\n  - The effect of EI is statistically non-significant and positive (beta = 0.04,\n95% CI [-0.03, 0.10], t(30) = 1.19, p = 0.242; Std. beta = 0.16, 95% CI [-0.11,\n0.43])\n  - The effect of Condition [Rest] is statistically significant and negative\n(beta = -0.09, 95% CI [-0.13, -0.04], t(30) = -3.99, p < .001; Std. beta =\n-0.77, 95% CI [-1.17, -0.38])\n  - The effect of FWHMsLASER is statistically non-significant and positive (beta\n= 0.03, 95% CI [-0.04, 0.09], t(30) = 0.85, p = 0.402; Std. beta = 0.15, 95% CI\n[-0.22, 0.52])\n  - The effect of FWHMOsprey is statistically non-significant and negative (beta\n= -0.02, 95% CI [-0.06, 0.02], t(30) = -0.87, p = 0.389; Std. beta = -0.12, 95%\nCI [-0.41, 0.16])\n  - The effect of MeanFD is statistically non-significant and negative (beta =\n-1.17, 95% CI [-2.67, 0.33], t(30) = -1.59, p = 0.122; Std. beta = -0.26, 95%\nCI [-0.60, 0.07])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald t-distribution approximation.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Plotting residuals to check assumptions\nplot(resid(model) ~ fitted(model))\nabline(h = 0, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nhist(resid(model)) # Check for normality\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-58-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n# QQ plot for normality of residuals\nqqnorm(resid(model))\nqqline(resid(model))\n```\n\n::: {.cell-output-display}\n![](EI_Hurst_Revised_files/figure-html/unnamed-chunk-58-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Comparing a simpler model without the EI predictor\nmodel_without_EI <- lmer(Hurst ~ Age + Sex + Condition + (1 | Subject), data = df_lme)\nanova(model, model_without_EI)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nrefitting model(s) with ML (instead of REML)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nData: df_lme\nModels:\nmodel_without_EI: Hurst ~ Age + Sex + Condition + (1 | Subject)\nmodel: Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD + (1 | Subject)\n                 npar     AIC     BIC logLik deviance  Chisq Df Pr(>Chisq)\nmodel_without_EI    6 -67.156 -57.331 39.578  -79.156                     \nmodel               8 -64.503 -51.403 40.252  -80.503 1.3469  2     0.5099\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmodel_without_Condition <- lmer(Hurst ~ Age + Sex + EI + (1 | Subject), data = df_lme)\nanova(model, model_without_Condition)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nrefitting model(s) with ML (instead of REML)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nData: df_lme\nModels:\nmodel_without_Condition: Hurst ~ Age + Sex + EI + (1 | Subject)\nmodel: Hurst ~ EI + Condition + FWHMsLASER + FWHMOsprey + MeanFD + (1 | Subject)\n                        npar     AIC     BIC logLik deviance  Chisq Df\nmodel_without_Condition    6 -56.088 -46.263 34.044  -68.088          \nmodel                      8 -64.503 -51.403 40.252  -80.503 12.415  2\n                        Pr(>Chisq)   \nmodel_without_Condition              \nmodel                     0.002014 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n## Remove Spectroscopy and fMRI Outliers\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# df_lme_nooutliers <- df_lme %>% filter(!c(Subject == 3 | Subject == 5 | Subject == 8 | Subject == 14 | Subject == 17 | Subject == 21 | Subject == 25))\n# model <- lmer(Hurst ~ EI + Age + Sex + Condition + (1 | Subject), data = df_lme_nooutliers)\n# summary(model)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsave.image('results.RData')\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}