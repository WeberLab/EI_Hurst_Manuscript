---
title: "EI_Hurst"
author: "Lydia Sochan and Alex Weber"
date: "2025-02-15"
format: html
execute: 
  echo: false
---

```{r}
#| label = "setup",
#| include = FALSE
knitr::opts_chunk$set(echo = FALSE, error = FALSE, warning = FALSE, message = FALSE)
```

```{r}
# First, let's load our packages.
library(tidyverse)
library(reshape2)
library(rio)
library(corrplot)
library(Hmisc)
library(viridis)
library(ggrepel)
library(formattable)
library(lsr)
library(nlme)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(glmnet)
library(psych)
library(lmerTest)
library(lme4)
```

```{r}
### LOAD DATA

# Base directory
base_dir <- "../Data/participant_measures/"

# Create filenames
filenames <- paste0(base_dir, "sub-Pilot", sprintf("%02d", 1:26), "_EI_Hurst_Measures_Expanded.tsv")

# Function to read and process a single file
read_and_process <- function(filename) {
  # Read the file
  data <- import(filename, fill = T)

  # Extract the subject number from the filename
  subject_number <- gsub(".*sub-Pilot(\\d+).*", "\\1", filename)

  # Add the subject number column
  data <- mutate(data, Subject = subject_number)
  data <- data %>% select(Subject, everything())
  # This column appears to have a lot of NAs
  data <- data %>% select(!c(Rest_GABA_Gannet_tCr, Movie_GABA_Gannet_tCr))

  return(data)
}

# Apply the function to each file
list_of_dataframes <- lapply(filenames, read_and_process)

# Combine all dataframes into one and reformat some columns
df <- bind_rows(list_of_dataframes)
df$Subject <- as.numeric(df$Subject) # Change Subject column to numeric
num_subjects <- length(df$Subject) # Count the number of subjects

# GABA+ from Osprey
df <- df %>%
  select(Subject, Rest_Glu, Movie_Glu, Rest_GABA, Movie_GABA, Rest_GABAplus, Movie_GABAplus, Rest_GABA_Gannet, Movie_GABA_Gannet, Rest_Hurst_FullFreq, Movie_Hurst_FullFreq, Rest_MeanFD, Movie_MeanFD, Rest_FWHM_SLASER, Rest_FWHM_Osprey, Movie_FWHM_Osprey, Movie_FWHM_SLASER, Rest_Glx, Movie_Glx, Rest_Glx_tCr, Movie_Glx_tCr, Rest_GABAplus_tCr, Movie_GABAplus_tCr) %>%
  rename(Rest_GABAGannet = Rest_GABA_Gannet, Movie_GABAGannet = Movie_GABA_Gannet)

tcr <- T
if (tcr == T) {
  df <- subset(df, select = -c(Rest_Glx, Movie_Glx))
  df$Rest_Glx <- df$Rest_Glx_tCr
  df$Movie_Glx <- df$Movie_Glx_tCr
  df <- subset(df, select = -c(Rest_Glx_tCr, Movie_Glx_tCr))
  df <- subset(df, select = -c(Rest_GABAplus, Movie_GABAplus))
  df$Rest_GABAplus <- df$Rest_GABAplus_tCr
  df$Movie_GABAplus <- df$Movie_GABAplus_tCr
  df <- subset(df, select = -c(Rest_GABAplus_tCr, Movie_GABAplus_tCr))
}
```

```{r}
# Load additional Hurst measures
# Base directory
base_dir <- "../Data/participant_measures/add_hurst_data/"

# Create filenames
filenames <- paste0(base_dir, "sub-Pilot", sprintf("%02d", 1:26), "_Add_Hurst.tsv")

# Function to read and process a single file
read_and_process <- function(filename) {
  # Read the file
  data <- import(filename, fill = T)

  # Extract the subject number from the filename
  subject_number <- gsub(".*sub-Pilot(\\d+).*", "\\1", filename)

  # Add the subject number column
  data <- mutate(data, Subject = subject_number)
  data <- data %>% select(Subject, everything())
  # This column appears to have a lot of NAs

  return(data)
}

# Apply the function to each file
list_of_dataframes <- lapply(filenames, read_and_process)

# Combine all dataframes into one and reformat some columns
df_additionalHurst <- bind_rows(list_of_dataframes)
df_additionalHurst$Subject <- as.numeric(df_additionalHurst$Subject)

# Keep only RS (for now)

df_RS <- df_additionalHurst %>% select(Subject, Rest_RS, Movie_RS)
```

```{r}
df <- full_join(df, df_RS, by = "Subject")
## only include selected participants
df <- df %>% dplyr::filter(Rest_MeanFD <= 0.15, Movie_MeanFD <= 0.15, Rest_FWHM_SLASER <= 10, Rest_FWHM_Osprey <= 10, Movie_FWHM_Osprey <= 10, Movie_FWHM_SLASER <= 10)
```


# Subject Demographics

We collected age, sex and handedness:

```{r}
# Let's start by compiling our dataframe with subject demographics. We create a function to calculate age at scan from birthday and scan date.

# Subject Info
subjects <- read.csv("../Data/participant_measures/SubjectInfo.csv")
age <- function(dob, age.day = today(), units = "years", floor = TRUE) {
  calc.age <- lubridate::interval(dob, age.day) / lubridate::duration(num = 1, units = units)
  if (floor) {
    return(as.integer(floor(calc.age)))
  }
  return(calc.age)
}
subjects <- subjects[c(1:2, 4, 6:7, 9:13, 15:16, 18:20, 22:24, 26), ]
num_subjects <- 19
year <- substring(subjects$DOB, 7, 10)
month <- substring(subjects$DOB, 4, 5)
day <- substring(subjects$DOB, 1, 2)
subjects$DOB <- paste0(year, "-", month, "-", day)
subjects$Age <- age(subjects$DOB)
subjects$Subject <- c(1:2, 4, 6:7, 9:13, 15:16, 18:20, 22:24, 26)
subs_clean <- dplyr::select(subjects, Subject, Age, Sex, Handedness)

color.picker.sex <- function(z) {
  if (z == "M") {
    return("lightblue")
  } else if (z == "F") {
    return("pink")
  } else {
    return("white")
  }
}
color.picker.hand <- function(z) {
  if (z == "L") {
    return("red")
  } else if (z == "R") {
    return("darkolivegreen1")
  } else {
    return("white")
  }
}

sub_dem <- formattable(subs_clean, list(
  Sex = formatter("span",
    style = x ~ style(
      display = "block",
      "border-radius" = "4px",
      "padding-right" = "4px",
      "background-color" = sapply(x, color.picker.sex)
    )
  ),
  Handedness = formatter("span",
    style = x ~ style(
      display = "block",
      "border-radius" = "4px",
      "padding-right" = "4px",
      "color" = sapply(x, color.picker.hand)
    )
  )
))
sub_dem
```